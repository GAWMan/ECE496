%Extracts the band power from the file given by fname, from timestart to
%timeend
%Band_power is a nice looking formatted graph
clc;
clear all;
%fname = 'Ryan-leftmu-22.12.13.16.12.03.edf';
fname = 'Ryan-leftfoot-22.12.13.16.19.53.edf';
%fname = 'Ryan-mufeet-22.12.13.16.15.12.edf';
%fname = 'Ryan-mixmu-22.12.13.16.23.55.edf';
%fname = 'Ryan-righthand-22.12.13.16.21.46.edf';
%fname = 'Ryan-rightfoot-22.12.13.16.18.14.edf';
% fname = 'Ryan-rightmustuff-22.12.13.16.04.19.edf';
%Power is the raw data if you want to do analysis
[hdr,eegdata] = edfread(fname); %Read the .edf data
for count= 1:(length(eegdata(6,:))/128)
            if (count == 1)
                begin = 1;
                tend = 128;
            else
                begin =128*(count-1) + 1;
                tend = 128*count;
            end
            if tend >= (length(eegdata(6,:)))
               break; 
            end
            
            
            %% filter out things that are not mu
            k = 0;
            i = 0;
            for k = [6 7 12 13]
                i = i+1;
                filt_temp(i,:) = fft(eegdata(k,begin:tend));
                for q = 1:128
                    if(q < 8 || q > 14);
                        filt_temp(i,q) = 0;
                    end
                end           
                eegdata(k,begin:tend) = ifft(filt_temp(i,:));
            end
            
            varFC5(count,1)= var(eegdata(6,begin:tend));
            varT7(count,1)= var(eegdata(7,begin:tend));
            varT8(count,1)= var(eegdata(12,begin:tend));
            varFC6(count,1)= var(eegdata(13,begin:tend));          
            
            sigmaFC5T7(count,1) = covarianceinput(eegdata(6,begin:tend), eegdata(7,begin:tend));
            C = corrcoef(eegdata(6,begin:tend), eegdata(7,begin:tend));
            sigmaFC5T7(count,2) = C(2,1);
            
            sigmaFC5T8(count,1) = covarianceinput(eegdata(6,begin:tend), eegdata(12,begin:tend));
            C = corrcoef(eegdata(6,begin:tend), eegdata(12,begin:tend));
            sigmaFC5T8(count,2) = C(2,1);
          
            sigmaFC5FC6(count,1) = covarianceinput(eegdata(6,begin:tend), eegdata(13,begin:tend));
            C = corrcoef(eegdata(6,begin:tend), eegdata(13,begin:tend));
            sigmaFC5FC6(count,2) = C(2,1);
            
            sigmaT7T8(count,1) = covarianceinput(eegdata(7,begin:tend), eegdata(12,begin:tend));
            C = corrcoef(eegdata(7,begin:tend), eegdata(12,begin:tend));
            sigmaT7T8(count,2) = C(2,1);
            
            sigmaT7FC6(count,1) = covarianceinput(eegdata(7,begin:tend), eegdata(13,begin:tend));
            C = corrcoef(eegdata(7,begin:tend), eegdata(13,begin:tend));
            sigmaT7FC6(count,2) = C(2,1);
            
            sigmaT8FC6(count,1) = covarianceinput(eegdata(12,begin:tend), eegdata(13,begin:tend));
            C = corrcoef(eegdata(12,begin:tend), eegdata(13,begin:tend));
            sigmaT8FC6(count,2) = C(2,1);
            
            sigmaT8FC6(count, 3) = max(eegdata(36,begin:tend));
            F6(count,:) = fft(eegdata(6,begin:tend),128);
            marker(count,:) = max(eegdata(36,begin:tend));
%             F6(count,1) = 0;
%             F6(count,2) = 0; 
%             F6(count,3) = 0; 
%             F6(count,4) = 0; 
%             F6(count,5) = 0; 
%             F6(count,6) = 0; 
%             filt_sample1(begin:tend,1)= ifft(F6(count,:),128);    
            mupowerFC5(count,1) = ((abs(F6(count,9))^2) + (abs(F6(count,10))^2) + (abs(F6(count,11))^2) + (abs(F6(count,12))^2) + (abs(F6(count,13))^2) + (abs(F6(count,14))^2))/6; 
            F7(count,:) = fft(eegdata(7,begin:tend),128);
%             F7(count,1) = 0;
%             F7(count,2) = 0; 
%             F7(count,3) = 0; 
%             F7(count,4) = 0; 
%             F7(count,5) = 0; 
%             F7(count,6) = 0; 
%             filt_sample2(begin:tend,1)= ifft(F7(count,:),128);  
            mupowerT7(count,1) = ((abs(F7(count,9))^2) + (abs(F7(count,10))^2) + (abs(F7(count,11))^2) + (abs(F7(count,12))^2) + (abs(F7(count,13))^2) + (abs(F7(count,14))^2))/6;
            F12(count,:) = fft(eegdata(12,begin:tend),128);
%             F12(count,:) = fft(eegdata(12,begin:tend),128);
%             F12(count,1) = 0;
%             F12(count,2) = 0; 
%             F12(count,3) = 0; 
%             F12(count,4) = 0; 
%             F12(count,5) = 0; 
%             F12(count,6) = 0; 
%             filt_sample3(begin:tend,1)= ifft(F12(count,:),128);    
            mupowerT8(count,1) = ((abs(F12(count,9))^2) + (abs(F12(count,10))^2) + (abs(F12(count,11))^2) + (abs(F12(count,12))^2) + (abs(F12(count,13))^2) + (abs(F12(count,14))^2))/6;
            F13(count,:) = fft(eegdata(13,begin:tend),128);
%             F13(count,1) = 0;
%             F13(count,2) = 0; 
%             F13(count,3) = 0; 
%             F13(count,4) = 0; 
%             F13(count,5) = 0; 
%             F13(count,6) = 0; 
%             filt_sample4(begin:tend,1)= ifft(F13(count,:),128);
            mupowerFC6(count,1) = ((abs(F13(count,9))^2) + (abs(F13(count,10))^2) + (abs(F13(count,11))^2) + (abs(F13(count,12))^2) + (abs(F13(count,13))^2) + (abs(F13(count,14))^2))/6;           
end
meanmupowerFC5 = 0;
meanmupowerT7 = 0;
meanmupowerT8 = 0;
meanmupowerFC6 = 0;
for i = 1:length(mupowerFC5(:,1))
                meanmupowerFC5= meanmupowerFC5 + ((mupowerFC5(i,1))/length(mupowerFC5(:,1)));
                meanmupowerT7= meanmupowerT7 + ((mupowerT7(i,1))/length(mupowerFC5(:,1)));
                meanmupowerT8= meanmupowerT8 + ((mupowerT8(i,1))/length(mupowerFC5(:,1)));
                meanmupowerFC6=meanmupowerFC6 + ((mupowerFC6(i,1))/length(mupowerFC5(:,1)));
end
for i = 1:length(mupowerFC5(:,1))
    mupowerFC5(i, 2) = mupowerFC5(i,1) - meanmupowerFC5;
    mupowerT7(i, 2) = mupowerT7(i,1) - meanmupowerT7; 
    mupowerT8(i, 2) = mupowerT8(i,1) - meanmupowerT8; 
    mupowerFC6(i, 2) = mupowerFC6(i,1) - meanmupowerFC6; 
end
data = [mupowerFC5(:,2) mupowerT7(:,2) mupowerT8(:,2) mupowerFC6(:,2)  sigmaFC5T7(:,2) sigmaFC5T8(:,2) sigmaFC5FC6(:,2) sigmaT7T8(:,2) sigmaT7FC6(:,2) sigmaT8FC6(:,2) varFC5(:,1) varT7(:,1) varT8(:,1) varFC6(:,1) marker];
%Ratios of Power

%%Training time
for i=1:length(marker)
target_left(i) = 1;
target_right(i) = 1;
target_lfeet(i) = 1;
target_rfeet(i) = 1;
    if (marker(i)==1 || ((i~=1) && marker(i-1)==1));
        target_left(i)=2;
    elseif (marker(i)==2 || ((i~=1) && marker(i-1)==2));
        target_right(i) = 2;
    elseif (marker(i)==3 || ((i~=1) && marker(i-1)==3));
        target_lfeet(i) = 2;
    elseif (marker(i)==4 || ((i~=1) && marker(i-1)==4));
        target_rfeet(i)= 2;
    else
        %DONOTHING
    end
end

%data_log = 10*log10(abs(data(:,1:5)));

%WHITE NOISE 
%data_log = rand(72,4)*100;
%target_left = ceil(rand(72,1)*2);


B_left_arm = mnrfit(data(:,1:14),target_left);
B_right_arm = mnrfit(data(:,1:14),target_right);
B_lfeet = mnrfit(data(:,1:14),target_lfeet);
B_rfeet = mnrfit(data(:,1:10),target_rfeet);

for i=1:length(marker)
%    leftarm_LR(i)= 2-1/(1+exp(-dot(B_left_arm,[1 data(i,1:14)])));
%    rightarm_LR(i) = 2-1/(1+exp(-dot(B_right_arm,[1 data(i,1:14)])));
    lfeet_LR(i) = 2-1/(1+exp(-dot(B_lfeet,[1 data(i,1:14)])));
%    rfeet_LR(i) = 2-1/(1+exp(-dot(B_rfeet,[1 data(i,1:10)])));
end


datag = [lfeet_LR' marker];
