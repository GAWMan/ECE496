%determines if the subject is clenching their jaw
%inputs: LOOP_NUM, sample
% *the variable sample needs to have 128 samples exactly*
%outputs: jaws_clenched

%first thing that has to be done is some filtering
%take frequencies above 32hz, when you clench your jaw it's high frequency
%and high power.
jaw_power(LOOP_NUM) = 0;
k = 0;
jaw_power_sum(LOOP_NUM) = 0;

for j = [1,2,3,4,11,12,13,14];
    %instead of using 1,2,3,4,11,12,13,14 it now goes 1-8
    k = k+1; 
    
    F(k,:) = fft(sample(j,:));
    jaw_power(LOOP_NUM,k) = 0;
    
    %selects frequencies from 32-48 Hz
    for i = 33:49;
        jaw_power(LOOP_NUM,k) = jaw_power(LOOP_NUM,k)+ abs(F(k,i))^2;
    end
    
    %normalize for the range of frequencies being sampled, in this case
    %looking at 16 frequencies
    jaw_power(LOOP_NUM,k) = jaw_power(LOOP_NUM,k)/16;
    jaw_power_sum(LOOP_NUM) = jaw_power_sum(LOOP_NUM) + jaw_power(LOOP_NUM,k)/8;
end

%determine powers in the right and left jaws as well as the ratio between
%them
left_jaw_power(LOOP_NUM) = 0;
right_jaw_power(LOOP_NUM) = 0;
L_R_jaw_power(LOOP_NUM) = 0;
R_L_jaw_power(LOOP_NUM) = 0;
for j = 1:4
    left_jaw_power(LOOP_NUM) = left_jaw_power(LOOP_NUM) + jaw_power(LOOP_NUM,j)/4;
    right_jaw_power(LOOP_NUM) = right_jaw_power(LOOP_NUM) + jaw_power(LOOP_NUM,j+4)/4;
end
L_R_jaw_power(LOOP_NUM) = left_jaw_power(LOOP_NUM)/right_jaw_power(LOOP_NUM);
R_L_jaw_power(LOOP_NUM) = 1/L_R_jaw_power(LOOP_NUM);
  

%determine what it was (0 = no clench, 1 = both, 2 = right, 3 = left), the
%numbers here should be subject to change
if((left_jaw_power(LOOP_NUM) > 50000) && (L_R_jaw_power(LOOP_NUM) > 3)&& (L_R_jaw_power(LOOP_NUM) < 40))
    jaws_clenched(LOOP_NUM) = 3;
elseif ((right_jaw_power(LOOP_NUM) > 50000) &&(R_L_jaw_power(LOOP_NUM) > 3)&&(R_L_jaw_power(LOOP_NUM) < 40))
    jaws_clenched(LOOP_NUM) = 2;
elseif (jaw_power_sum(LOOP_NUM) > 100000)
    jaws_clenched(LOOP_NUM) = 1;
else
    jaws_clenched(LOOP_NUM) = 0;
end
